#!/bin/bash
export SCRIPTPATH="$(
  cd "$(dirname "$0")"
  pwd -P
)"

#down the last running theme
if [ -f "/tmp/leftwm-theme-down" ]; then
  /tmp/leftwm-theme-down
  rm /tmp/leftwm-theme-down
fi
ln -s ${SCRIPTPATH}/down /tmp/leftwm-theme-down

#boot compton or picom if it exists
if [ -x "$(command -v picom)" ]; then
  picom &>/dev/null &
elif [ -x "$(command -v compton)" ]; then
  compton &>/dev/null &
fi

#set the theme.toml config
leftwm command "LoadTheme $SCRIPTPATH/theme.toml"

#set background
if [ -x "$(command -v feh)" ]; then
  feh --bg-fill "${SCRIPTPATH}/background.jpg"
fi

# extra utils to make this theme a little more homey
if [ -x "$(command -v dunst)" ]; then
  dunst -conf "${SCRIPTPATH}/dunst/config" &
fi

#boot a polybar for each monitor
cd ${SCRIPTPATH}/polybar
polybar -m | sed s/:.*// | tac | while read -r monitor; do
  monitor=$monitor polybar -c config.ini main &>/dev/null &
done

if [ -x "$(command -v xautolock)" ]; then
  xautolock -detectsleep \
    -time 5 \
    -locker "i3lock-fancy-rapid 5 pixel" \
    -notify 15 \
    -notifier "notify-send -u critical -t 10000 -- 'LOCKING in 15 seconds'" \
    -killtime 15 \
    -killer "systemctl suspend-then-hibernate" &
# TODO: investigate xidlehook:
# #!/usr/bin/env bash
# # Only exported variables can be used within the timer's command.
# export PRIMARY_DISPLAY="$(xrandr | awk '/ primary/{print $1}')"

# xidlehook \
#   --not-when-fullscreen \
#   `# Dim the screen after 60 seconds, undim if user becomes active` \
#   --timer 60 \
#     'xrandr --output "$PRIMARY_DISPLAY" --brightness .1' \
#     'xrandr --output "$PRIMARY_DISPLAY" --brightness 1' \
#   --timer 300 \
#     'xrandr --output "$PRIMARY_DISPLAY" --brightness 1; i3lock' \
#     '' \
#   --timer 1800 \
#     'systemctl suspend' \
#     ''
fi
